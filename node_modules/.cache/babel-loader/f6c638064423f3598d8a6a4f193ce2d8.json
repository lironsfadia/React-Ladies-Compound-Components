{"ast":null,"code":"import React, { Children } from \"react\"; // compound-components-with-react-hooks\n\nfunction Switch(_ref) {\n  let {\n    value,\n    children\n  } = _ref;\n  return Children.toArray(children).filter(child => {\n    if (typeof child === \"string\") {\n      throw \"Switch component must work with Case component. Not strings \";\n    } else {\n      return child.props.match === value;\n    }\n  });\n}\n\n_c = Switch;\n\nconst Case = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  return children;\n};\n\n_c2 = Case;\nSwitch.Case = Case;\nexport default Switch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Switch\");\n$RefreshReg$(_c2, \"Case\");","map":{"version":3,"names":["React","Children","Switch","value","children","toArray","filter","child","props","match","Case"],"sources":["/home/liron/projects/nirk/rlp_start/src/Switch.js"],"sourcesContent":["import React, { Children } from \"react\";\n\n// compound-components-with-react-hooks\nfunction Switch({ value, children }) {\n  return Children.toArray(children).filter((child) => {\n    if (typeof child === \"string\") {\n      throw \"Switch component must work with Case component. Not strings \";\n    } else {\n      return child.props.match === value;\n    }\n  });\n}\n\nconst Case = ({ children }) => {\n  return children;\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,MAAT,OAAqC;EAAA,IAArB;IAAEC,KAAF;IAASC;EAAT,CAAqB;EACnC,OAAOH,QAAQ,CAACI,OAAT,CAAiBD,QAAjB,EAA2BE,MAA3B,CAAmCC,KAAD,IAAW;IAClD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,MAAM,8DAAN;IACD,CAFD,MAEO;MACL,OAAOA,KAAK,CAACC,KAAN,CAAYC,KAAZ,KAAsBN,KAA7B;IACD;EACF,CANM,CAAP;AAOD;;KARQD,M;;AAUT,MAAMQ,IAAI,GAAG,SAAkB;EAAA,IAAjB;IAAEN;EAAF,CAAiB;EAC7B,OAAOA,QAAP;AACD,CAFD;;MAAMM,I;AAINR,MAAM,CAACQ,IAAP,GAAcA,IAAd;AAEA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}